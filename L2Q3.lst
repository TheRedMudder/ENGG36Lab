C:\Kwong\L2Q3.lst - generated by MGTEK Assembler ASM12 V1.26 Build 144 for WIN32 (x86) - Thu Nov 01 23:13:57 2018

    1:          =00001000                      org     $1000   ; SP to mem address $1000
    2:     1000 +0001                  sum     rmb     1       ; reserve 1 mem bytes for sum
    3:     1001 +0001                  arcnt   rmb     1       ; reserve 1 mem bytes for arcnt
    4:                                         
    5:          =00002100                      org     $2100   ; SP to mem address $2000
    6:     2100 86 14                          ldaa    #20     ;load #20 to A
    7:     2102 7A 1001                        staa    arcnt   ; Store A (20) to arcnt
    8:     2105 CE 1100                        ldx     #array  ; Load address of array
    9:     2108 86 00                          ldaa    #0      ; load 0 into A
   10:     210A 7A 1000                        staa    sum     ; store A (0) into sum
   11:     210D A6 00                  again   ldaa    0,x     ; load the value of the memory location saved in X
   12:     210F 44                             lsra            ;Accumilator shifted to right
   13:     2110 25 0E                          bcs     next    ;branch if carry set
   14:     2112 44                             lsra            ;Accumilator shifted to right
   15:     2113 25 0B                          bcs     next    ;branch if carry set
   16:     2115 44                             lsra            ;Accumilator shifted to right
   17:     2116 25 08                          bcs     next    ;branch if carry set
   18:     2118 B6 1000                        ldaa    sum     ; load sum into A
   19:     211B AB 00                          adda    0,x     ; add value of the mem location saved in X
   20:     211D 7A 1000                        staa    sum     ; Store sum
   21:     2120 08                     next    inx             ;increment x
   22:     2121 73 1001                        dec     arcnt   ;decrement arcnt
   23:     2124 26 E7                          bne     again   ;branch if not equal
   24:     2126 3F                             swi             ;software interupt
   25:          =00001100                      org     $1100
   26:     1100 0A 0C 0E 10 12 14      array   fcb     10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40
           1106 16 18 1A 1C 1E 20 
           110C 22 24 26 28 
   27:     1110 2A 2C 2E 30 32 34              fcb     42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72
           1116 36 38 3A 3C 3E 40 
           111C 42 44 46 48 
   28:                                         end

Symbols:
again                           *0000210d
arcnt                           *00001001
array                           *00001100
next                            *00002120
sum                             *00001000

